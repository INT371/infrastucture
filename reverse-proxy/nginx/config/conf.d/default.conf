	server { 
		#Monitor port 443
		listen 443 ssl;
		server_name www.rvcomfort.ninja; #domain name
		
		# Add ssl
		ssl on; #If you force HTTP access, this line should be opened
		ssl_certificate /ssl/www.rvcomfort.ninja.crt; #The crt file storage path of nginx for ssl certificate of domain name application
		ssl_certificate_key /ssl/www.rvcomfort.ninja.key; #Storage path of nginx key file of ssl certificate for domain name application
		ssl_session_cache shared:SSL:1m;
		ssl_session_timeout 5m;
		
		# Specify the password as a format supported by openssl
		ssl_protocols SSLv2 SSLv3 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5; # Password encryption method
		ssl_prefer_server_ciphers on; # Server passwords that rely on SSLv3 and TLSv1 protocols will take precedence over client passwords
		
		# Define the index directory and name of the first page
		location ~* \.(eot|ttf|woff|woff2)$ {
			add_header Access-Control-Allow-Origin *;
			}
			
		location / {
			proxy_pass			http://frontend:80;
			proxy_http_version  1.1;
			proxy_cache_bypass  $http_upgrade;
			
			proxy_set_header Upgrade           $http_upgrade;
			proxy_set_header Connection        "upgrade";
			proxy_set_header Host              $host;
			proxy_set_header X-Real-IP         $remote_addr;
			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host  $host;
			proxy_set_header X-Forwarded-Port  $server_port;
		}
		location ^~ /api/ {
			proxy_pass			http://backend:8083;
			proxy_http_version  1.1;
			proxy_cache_bypass  $http_upgrade;
			
			proxy_set_header Upgrade           $http_upgrade;
			proxy_set_header Connection        "upgrade";
			proxy_set_header Host              $host;
			proxy_set_header X-Real-IP         $remote_addr;
			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host  $host;
			proxy_set_header X-Forwarded-Port  $server_port;
		}
		
		##Redirect error page to / 50x.html
		#error_page 500 502 503 504 /50x.html;
		#location = /50x.html {
		#	root /usr/share/nginx/html;
		#}
	
	}
	server{ 
		#Monitor port 80
		listen 80;
		server_name www.rvcomfort.ninja;
		rewrite ^(.*) https://$host$1 permanent; # All connections that arrive here are converted to https
	}
